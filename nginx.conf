
user xiawenxing;
worker_processes  4;

error_log  /home/xiawenxing/log/nginx/error_toolsets.log error;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    use epoll;
    worker_connections  1024;
}


http {
    #include       mime.types;
    default_type  application/octet-stream;
	lua_package_path '/home/xiawenxing/web_toolsets/?.lua;;';
	lua_package_cpath '/home/xiawenxing/web_toolsets/lib/?.so;;';

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /home/xiawenxing/log/nginx/access_toolsets.log  ;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  900;
    #keepalive_timeout  0;
    #client_header_timeout 3;
    #client_max_body_size 10m;
    client_body_buffer_size 128k;
    client_header_buffer_size 128k;
    #chunked_transfer_encoding off;

    gzip  on;
	lua_code_cache on;

	init_by_lua_file "/home/xiawenxing/web_toolsets/init/init_require_file.lua";

	#init_worker_by_lua_file "/home/xiawenxing/xiartb/src/nginx/init_worker.lua";

    server {
        listen       2100;
        server_name  localhost;
        lua_need_request_body on;
        #charset koi8-r;

        #access_log  logs/host.access.log  main;

        location / {
            root   html;
            index  index.html index.htm;
        }

        #client_max_body_size 10m;
        client_body_buffer_size 128k;
        client_header_buffer_size 128k;
	
        location /query_cms_conf{
                content_by_lua "
                    local cms_conf = require 'query.CMSBidderConfQuery'
                    cms_conf:handle(ngx)
                ";
                }
    
        location /query_budget_conf{
                content_by_lua "
                    local cms_conf = require 'query.CMSBudgetConfQuery'
                    cms_conf:handle(ngx)
                ";
                }
    
         location /query_budget_server{
                content_by_lua "
                    local cms_conf = require 'query.BudgetServerConfQuery'
                    cms_conf:handle(ngx)
                ";
                }
    
        location /query_budget_client{
            content_by_lua "
                local cms_conf = require 'query.BudgetClientConfQuery'
                cms_conf:handle(ngx)
            ";
            }
 
        location /query_redis{
            content_by_lua "
                local cms_conf = require 'query.RedisInfoQuery'
                cms_conf:handle(ngx)
            ";
            }
         #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443;
    #    server_name  localhost;

    #    ssl                  on;
    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_timeout  5m;

    #    ssl_protocols  SSLv2 SSLv3 TLSv1;
    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers   on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
